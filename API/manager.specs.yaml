openapi: "3.0.3"

info:
  title: Cloud storage app
  version: "0.1"

servers:
  - url: http://localhost:8080/
    description: Example API Service

paths:
  /apistatus:
    get:
      summary: Health status of application
      description: Checks database availability and API response threshold time.
      operationId: manager.api_status.ApiStatus.get
      responses:
        200:
          description: API is healthy
        400:
          description: API is down

  /users:
    get:
      summary: Get usernames of users
      description: Get usernames of users
      operationId: manager.users.Users.get
      responses:
        200:
          description: API is healthy
          # content: 
          #   application/json:
          #     schema:
          #       $ref: "#/components/schemas/UsersResponse"
        400:
          description: API is down

  /users/create:
    put:
      summary: Get user based on their id
      description: Get user based on their id
      operationId: manager.users.CreateUser.put
      requestBody:
        description: Post data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  example: Karel123
                password:
                  type: string
                  example: nosorozci123
              required:
                - userName
                - password
      responses:
        200: 
          description: User created successfully
        400:
          description: User creation failed

  /users/auth/{user_name}/{user_passwd}:
    get:
      summary: Get user based on their id
      description: Get user based on their id
      operationId: manager.users.UserAuthentication.get
      responses:
        200:
          description: User authentication successful
        400:
          description: User authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
      parameters:
        - in: path
          name: user_name
          description: Username
          required: true
          schema:
            type: string
            example: blahs
        - in: path
          name: user_passwd
          description: Users password
          required: true
          schema:
            type: string
            example: blah

  /salt:
    get:
      summary: Get salt from database
      description: Get salt from database
      operationId: manager.salt.Salt.get
      responses:
        200:
          description: Salt sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  salt:
                    type: string
                    description: Salt for password
                    example: OPIlkasjbdhar                
        400:
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"

components:
  schemas:
    InternalError:
      type: object
      properties:
        error:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                description: Error msg
                example: Internal server error
              status:
                type: string
                description: Error code
                example: 404
            required:
              - message
              - status
            minItems: 1
      required: 
        - error
              

    # UsersResponse:
    #   type: object
    #   properties:
        