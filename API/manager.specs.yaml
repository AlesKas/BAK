openapi: "3.0.3"

info:
  title: Cloud storage app
  version: "0.1"

servers:
  - url: http://localhost:8080/
    description: Example API Service

paths:
  /apistatus:
    get:
      summary: Health status of application
      description: Checks database availability and API response threshold time.
      operationId: manager.api_status.ApiStatus.get
      responses:
        200:
          description: API is healthy
        400:
          description: API is down

  /users:
    get:
      summary: Get usernames of users
      description: Get usernames of users
      operationId: manager.users.Users.get
      responses:
        200:
          description: API is healthy
          # content: 
          #   application/json:
          #     schema:
          #       $ref: "#/components/schemas/UsersResponse"
        400:
          description: API is down
    
  /encrypt/{string_arg}:
    get:
      summary: Get encrypted string
      description: Get encrypted string
      operationId: manager.encryption.Encryption.get
      responses:
        200:
          description: Encrypted string
          content: 
            text/plain:
              schema:
                type: string
                example: blah
        400:
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
      parameters:
        - in: path
          name: string_arg
          description: String to encrypt
          required: true
          schema:
            type: string
          example: blah

  /users/{user_id}:
    get:
      summary: Get user based on their id
      description: Get user based on their id
      operationId: manager.users.UserDetail.get
      responses:
        200:
          description: user detail
        400:
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
      parameters:
        - in: path
          name: user_id
          description: Get user datails based on ther id
          schema:
            type: integer
            example: 1


components:
  schemas:
    InternalError:
      type: object
      properties:
        error:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                description: Error msg
                example: Internal server error
              status:
                type: string
                description: Error code
                example: 404
            required:
              - message
              - status
            minItems: 1
      required: 
        - error
              

    # UsersResponse:
    #   type: object
    #   properties:
        